{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nexport function getImagesByQuery(query) {\n  const config = {\n    baseURL: 'https://pixabay.com/api/',\n    params: {\n      key: '49660701-34943155f6893778b93ecffed',\n      q: `${query}`,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: 'true',\n    },\n  };\n  return axios(config)\n    .then(response => response.data.hits)\n    .catch(error =>\n      iziToast.show({\n        message: `Ooops, something went wrong, try again. ${error}`,\n        position: 'topRight',\n        messageColor: '#fff',\n        backgroundColor: 'red',\n      })\n    );\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox = null;\nconst loader = document.querySelector('.loader');\n\nexport function createGallery(images) {\n  const galleryContainer = document.querySelector('.gallery');\n  let createdElements = [];\n  images.forEach(image => {\n    createdElements.push(`<li class=\"gallery-item\">\n\t<a class=\"gallery-link\" href=\"${image.webformatURL}\">\n  <div class=\"image-wrapper\">\n    <img \n      class=\"gallery-image\" \n      src=\"${image.largeImageURL}\" \n      alt=\"${image.tags}\" \n    />\n    \n    <div class=\"overlay-box\">\n      <div class=\"in-list-container\">\n        <h2 class=\"in-list-title\">Likes</h2>\n        <p class=\"in-list-p\">${image.likes}</p>\n      </div>\n      <div class=\"in-list-container\">\n        <h2 class=\"in-list-title\">Views</h2>\n        <p class=\"in-list-p\">${image.views}</p>\n      </div>\n      <div class=\"in-list-container\">\n        <h2 class=\"in-list-title\">Comments</h2>\n        <p class=\"in-list-p\">${image.comments}</p>\n      </div>\n      <div class=\"in-list-container\">\n        <h2 class=\"in-list-title\">Downloads</h2>\n        <p class=\"in-list-p\">${image.downloads}</p>\n      </div>\n    </div>\n  </div>\n</a>\n   \n</li>`);\n  });\n  galleryContainer.innerHTML = createdElements.join('');\n\n  if (lightbox) {\n    lightbox.refresh();\n  } else {\n    lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n      download: true,\n    });\n  }\n}\nexport function clearGallery() {\n  const galleryContainer = document.querySelector('.gallery');\n  galleryContainer.innerHTML = '';\n\n  if (lightbox) {\n    lightbox.destroy();\n    lightbox = null;\n  }\n}\nexport function showLoader() {\n  loader.classList.remove('display-none');\n}\nexport function hideLoader() {\n  loader.classList.add('display-none');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  showLoader();\n  clearGallery();\n  const inputValue = form.elements['search-text'].value;\n  const requestedData = getImagesByQuery(inputValue);\n\n  requestedData\n    .then(response => {\n      if (response.length === 0) {\n        iziToast.show({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          messageColor: '#fff',\n          backgroundColor: 'red',\n        });\n      }\n      createGallery(response);\n    })\n    .catch(error => {\n      iziToast.show({\n        message: `Ooops, something went wrong, try again. ${error}`,\n        position: 'topRight',\n        messageColor: '#fff',\n        backgroundColor: 'red',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n    });\n\n  form.reset();\n}\n"],"names":["getImagesByQuery","query","config","axios","response","error","iziToast","lightbox","loader","createGallery","images","galleryContainer","createdElements","image","SimpleLightbox","clearGallery","showLoader","hideLoader","form","handleSubmit","event","inputValue"],"mappings":"owBAGO,SAASA,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,QAAS,2BACT,OAAQ,CACN,IAAK,qCACL,EAAG,GAAGD,CAAK,GACX,WAAY,QACZ,YAAa,aACb,WAAY,MACb,CACF,EACD,OAAOE,EAAMD,CAAM,EAChB,KAAKE,GAAYA,EAAS,KAAK,IAAI,EACnC,MAAMC,GACLC,EAAS,KAAK,CACZ,QAAS,2CAA2CD,CAAK,GACzD,SAAU,WACV,aAAc,OACd,gBAAiB,KAClB,CAAA,CACF,CACL,CCrBA,IAAIE,EAAW,KACf,MAAMC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAmB,SAAS,cAAc,UAAU,EAC1D,IAAIC,EAAkB,CAAE,EACxBF,EAAO,QAAQG,GAAS,CACtBD,EAAgB,KAAK;AAAA,iCACQC,EAAM,YAAY;AAAA;AAAA;AAAA;AAAA,aAItCA,EAAM,aAAa;AAAA,aACnBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMQA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,+BAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,+BAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,+BAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxC,CACN,CAAG,EACDF,EAAiB,UAAYC,EAAgB,KAAK,EAAE,EAEhDL,EACFA,EAAS,QAAS,EAElBA,EAAW,IAAIO,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,IACd,SAAU,EAChB,CAAK,CAEL,CACO,SAASC,GAAe,CAC7B,MAAMJ,EAAmB,SAAS,cAAc,UAAU,EAC1DA,EAAiB,UAAY,GAEzBJ,IACFA,EAAS,QAAS,EAClBA,EAAW,KAEf,CACO,SAASS,GAAa,CAC3BR,EAAO,UAAU,OAAO,cAAc,CACxC,CACO,SAASS,GAAa,CAC3BT,EAAO,UAAU,IAAI,cAAc,CACrC,CC1DA,MAAMU,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAgB,EACtBJ,EAAY,EACZD,EAAc,EACd,MAAMM,EAAaH,EAAK,SAAS,aAAa,EAAE,MAC1BlB,EAAiBqB,CAAU,EAG9C,KAAKjB,GAAY,CACZA,EAAS,SAAW,GACtBE,EAAS,KAAK,CACZ,QACE,2EACF,SAAU,WACV,aAAc,OACd,gBAAiB,KAC3B,CAAS,EAEHG,EAAcL,CAAQ,CACvB,CAAA,EACA,MAAMC,GAAS,CACdC,EAAS,KAAK,CACZ,QAAS,2CAA2CD,CAAK,GACzD,SAAU,WACV,aAAc,OACd,gBAAiB,KACzB,CAAO,CACF,CAAA,EACA,QAAQ,IAAM,CACbY,EAAY,CAClB,CAAK,EAEHC,EAAK,MAAO,CACd"}